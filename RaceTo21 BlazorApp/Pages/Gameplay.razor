@page "/Gameplay"
@using RaceTo21_BlazorApp

@inject NavigationManager NavigationManager

<style>

	body {
		font-family: 'Montserrat', sans-serif;
	}

	.fixed-bottom {
		justify-content: center;
	}

	.row {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		align-items: center;
		width: 100%;
	}

	.btn-purple {
		background-color: purple;
		color: #fff; /* text color */
	}

	.btn-rounded {
		border-radius: 50px; /* make the button fully rounded */
		padding: 10px 20px; /* adjust the padding to your preference */
		font-size: 16px; /* adjust the font size to your preference */
		font-weight: 500;
	}

	#numberInput {
		background-color: #D3D3D3; /* set the background color to grey */
		width: 200px; /* set the width to your desired size */
		margin: 20px;
		font-size: 20px;
		font-weight: bold;
		text-align: center;
	}

	.form-group {
		margin: 10px;
		display: inline-block;
	}

	.form-control {
		background-color: #D3D3D3; /* set the background color to grey */
		width: 200px; /* set the width to your desired size */
		font-size: 20px;
		font-weight: bold;
		text-align: center;
		padding: 10px;
	}

	p {
		width: 70%;
		text-align: center;
		padding-bottom: 20px;
	}

	.nav {
		padding: 30px;
		display: flex;
		width: 100%;
		max-width: 100%;
	}

	.container {
		padding: 0 0 80px 0;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		margin: 5px;
	}

	.greyNav {
		background-color: #CBC3E3;
	}

	h2 {
		padding: 10px 10px 10px 10px;
		font-size: 30px;
		font-weight: bold;
		text-align: center;
		margin-top: 10px;
	}

	.card-container {
		display: flex;
		flex-wrap: wrap;
		justify-content: flex-start;
	}

	.card-image {
		max-width: 120%;
		margin-right: 2px;
	}

	.purple-outline {
		border-style: solid;
		border-color: purple;
	}

	.purple-solid {
		background-color: purple;
	}

	.green-solid {
		background-color: #50C878;
	}

	.grey-solid {
		background-color: #D3D3D3;
	}

	.white-text {
		color: white;
	}
</style>

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">



<div class="container">
	@switch (Game.nextTask)
	{
		case AllTasks.PlayerTurn:

			<h2 class="mt-4">Round @(Game.rounds+1)</h2>
			<div class="container">
				@foreach (Player player in Game.players)
				{
					@if (player.isWinner == true)
					{
						DisableButtons();
						<div class="col" style="display: flex; flex-wrap: wrap; justify-content: flex-start; margin-bottom: 10px;">
							<h4 style="font-weight: 400; margin-right: 20px; ">🎊 ~ @player.name wins! ~ 🎊</h4>
							<button type="button" class="btn btn-purple btn-rounded" @onclick="() => { Game.nextTask = AllTasks.ShowOverallScores; GoToOverallScore(); }">View Scores</button>
						</div>
					}
				}

				@foreach (Player player in Game.players)
				{
					<div class="row mt-12" style="padding: 5px; width: 100%; flex-direction: row; flex-wrap:nowrap ">
						<div class="@ContainerColor(player)" style="margin-right:10px; width: 1250px; height: 150px; padding: 10px;">
							<label class="@(player.isCurrentPlayer || player.isWinner ? "white-text" : " ")" style="font-weight: bold; font-size: 20px">@player.name</label>
							<div class="row mt-12 card-container" style="padding: 5px">
								@foreach (Card card in player.cards)
								{
									<img class="card-image" src="card_assets/@Deck.imageIDs[$"{card.id}"]" alt="@card.id" />
								}
							</div>
						</div>

						<h3 style="margin-right: 10px; display: inline-block; border: 2px solid purple; padding: 10px; border-radius: 100px ">@player.score</h3>
						<h4 style="margin-right:10px; font-weight: 400">@PlayerStatusToString(player)</h4>

					</div>
				}
			</div>

			<div class="fixed-bottom">
				<div class="nav greyNav">
					<row class="row">
						<div class="col-md-3">
							<label for="playerName" style="font-weight: bold; font-size: 20px">@Game.players[Game.currentPlayer].name's Turn</label>
						</div>
						<div class="col-md-6">
							<button type="button" id="drawCard1" class="btn btn-purple btn-rounded" @onclick="() => { Game.DrawCards(1); }" disabled="@buttonDisabled">PICK 1 CARD</button>
							<button type="button" id="drawCard2" class="btn btn-purple btn-rounded" @onclick="() => { Game.DrawCards(2); }" disabled="@buttonDisabled">PICK 2 CARDS</button>
							<button type="button" id="drawCard3" class="btn btn-purple btn-rounded" @onclick="() => { Game.DrawCards(3); }" disabled="@buttonDisabled">PICK 3 CARDS</button>
						</div>
						<div class="col-md-1" style="text-align: center">
							<label>OR</label>
						</div>
						<div class="col-md-2">
							<button class="btn btn-purple btn-rounded" id="drawCard0" style="width: 200px" @onclick="() => { Game.DrawCards(0); }" disabled="@buttonDisabled">PASS</button>
						</div>
					</row>
				</div>
			</div>

			break;
	 }
</div>


@code {

	bool buttonDisabled = false;

	private void GoToOverallScore()
	{
		NavigationManager.NavigateTo("/OverallScore");
	}

	private void DisableButtons()
	{
		buttonDisabled = true;
	}

	private string ContainerColor(Player player)
	{
		if (player.isWinner == true)
		{
			return "green-solid";
		}
		else if (player.isCurrentPlayer == true)
		{
			return "purple-solid";
		}
		else if (player.status == PlayerStatus.bust)
		{
			return "grey-solid";
		}
		return "purple-outline";
	}

	private string PlayerStatusToString(Player player)
	{
		if (player.status == PlayerStatus.bust)
		{
			return "Busted";
		}
		else if (player.status == PlayerStatus.win)
		{
			return "Winner!";
		}
		else if (player.status == PlayerStatus.stay)
		{
			return "Stayed";
		}
		return "";
	}
}
