@page "/NumberOfPlayers"
@using RaceTo21_BlazorApp

@inject NavigationManager NavigationManager

<style>

	body {
		font-family: 'Montserrat', sans-serif;
	}

	.btn-purple {
		background-color: purple;
		color: #fff; /* text color */
	}

	.btn-rounded {
		border-radius: 50px; /* make the button fully rounded */
		padding: 10px 20px; /* adjust the padding to your preference */
		font-size: 16px; /* adjust the font size to your preference */
		font-weight: 500;
	}

	.btn-white {
		color: purple;
	}

	#numberInput {
		background-color: #D3D3D3; /* set the background color to grey */
		width: 200px; /* set the width to your desired size */
		margin: 20px;
		font-size: 20px;
		font-weight: bold;
		text-align: center;
	}

	.row {
		justify-content: center
	}

	.form-group {
		height: 100%;
		width: 100%;
		margin: 10px;
		display: inline-block;
	}

	.form-control {
		background-color: #D3D3D3; /* set the background color to grey */
		width: 200px; /* set the width to your desired size */
		font-size: 20px;
		font-weight: bold;
		text-align: center;
		padding: 10px;
	}

	p {
		width: 70%;
		text-align: center;
		padding-bottom: 20px;
	}

	.container {
		padding: 80px 0 0 0;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}

	h1 {
		padding: 10px 10px 10px 10px;
		font-size: 45px;
		font-weight: bold;
		color: purple;
		text-align: center;
		margin-top: 10px;
	}

	h2 {
		padding: 10px 10px 10px 10px;
		font-size: 25px;
		font-weight: bold;
		text-align: center;
		margin-top: 10px;
	}

	img {
		width: 30%;
	}
</style>

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">

<div class="container">
	<div class="container">
		@switch (Game.nextTask)
		{
			case AllTasks.GetNumberOfPlayers:

				<button type="button" class="btn btn-white btn-rounded mt-2" @onclick="ReturnToMain">
					← Back
				</button>
				<h2 class="text-center md-4">How many players?</h2>
				<input type="number" class="form-control" id="numberInput" min="2" max="8" step="1" @bind-value="Game.numberOfPlayers">
				<button class="btn btn-purple btn-rounded mt-4" type="button" @onclick="() => { Game.nextTask = AllTasks.GetNames; }">PLAY</button>
				break;

			case AllTasks.GetNames:

				<button type="button" class="btn btn-white btn-rounded mt-2" @onclick="() => { Game.nextTask = AllTasks.GetNumberOfPlayers; }">
					← Back
				</button>
				<h2 class="text-center mt-4">Player Names</h2>

				@if (Game.numberOfPlayers > 0)
				{
					<div class="row mt-12" style="padding: 5px">
						@for (var i = 0; i < 4 && i < Game.numberOfPlayers; i++)
						{
							int playerNumber = i;
							<div class="col md-3">
								<div class="form-group">
									<label for="playerInput@(playerNumber)">Player @(playerNumber + 1)</label>
									<input type="text" class="form-control" @bind-value="Game.tempNames[playerNumber]" />
								</div>
							</div>
						}

					</div>
				}

				@if (Game.numberOfPlayers > 4)
				{
					<div class="row mt-12" style="padding: 5px">
						@for (var i = 4; i < 8 && i < Game.numberOfPlayers; i++)
						{
							int playerNumber = i;
							<div class="col md-3">
								<div class="form-group">
									<label for="playerInput@(playerNumber)">Player @(playerNumber + 1)</label>
									<input type="text" class="form-control" @bind-value="Game.tempNames[playerNumber]" />
								</div>
							</div>
						}
					</div>
				}
				<button class="btn btn-purple btn-rounded mt-4" type="button" @onclick="() => { Game.nextTask = AllTasks.IntroducePlayers; GoToScorePage(); }">     PLAY     </button>
				break;
		}

	</div>
</div>


@code {

	private void GoToScorePage()
	{

		for (var i = 0; i < Game.numberOfPlayers; i++)
		{
			Game.AddPlayer(Game.tempNames[i]);
			Console.WriteLine($"Player {Game.tempNames[i]} added!");
		}

		NavigationManager.NavigateTo("/OverallScore");
	}

	private void ReturnToMain()
	{

		NavigationManager.NavigateTo("/");
	}
}