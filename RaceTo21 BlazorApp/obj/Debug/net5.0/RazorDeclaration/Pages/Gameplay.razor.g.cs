// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace RaceTo21_BlazorApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\NEU\Intermediate Programming\Week 5\RaceTo21_Ismail_Maham-V2\RaceTo21 BlazorApp\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\NEU\Intermediate Programming\Week 5\RaceTo21_Ismail_Maham-V2\RaceTo21 BlazorApp\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\NEU\Intermediate Programming\Week 5\RaceTo21_Ismail_Maham-V2\RaceTo21 BlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\NEU\Intermediate Programming\Week 5\RaceTo21_Ismail_Maham-V2\RaceTo21 BlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\NEU\Intermediate Programming\Week 5\RaceTo21_Ismail_Maham-V2\RaceTo21 BlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\NEU\Intermediate Programming\Week 5\RaceTo21_Ismail_Maham-V2\RaceTo21 BlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\NEU\Intermediate Programming\Week 5\RaceTo21_Ismail_Maham-V2\RaceTo21 BlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\NEU\Intermediate Programming\Week 5\RaceTo21_Ismail_Maham-V2\RaceTo21 BlazorApp\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\NEU\Intermediate Programming\Week 5\RaceTo21_Ismail_Maham-V2\RaceTo21 BlazorApp\_Imports.razor"
using RaceTo21_BlazorApp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\NEU\Intermediate Programming\Week 5\RaceTo21_Ismail_Maham-V2\RaceTo21 BlazorApp\Pages\Gameplay.razor"
using RaceTo21_BlazorApp;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Gameplay")]
    public partial class Gameplay : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 234 "D:\NEU\Intermediate Programming\Week 5\RaceTo21_Ismail_Maham-V2\RaceTo21 BlazorApp\Pages\Gameplay.razor"
       

	bool drawButtonsDisabled = false; // to disable all Draw A Card button
	bool passButtonDisabled = true; // to disable the Pass button // is disabled by default in the first turns of each player


	//Function to check when to disable PASS button
	private void DisablePassButton()
	{
		if (Game.turnsTaken == Game.players.Count)
		{
			passButtonDisabled = false;
		}
	}

	/* Function to disable all DRAW & PASS
	* buttons when the round is over.*/
	private void DisableAllButtons()
	{
		drawButtonsDisabled = true;
		passButtonDisabled = true;
	}

	/****************************CSS FUNCTIONS****************************/

	// Function to update each Player container's color according to status.
	private string ContainerColor(Player player)
	{
		if (player.isWinner == true || player.status == PlayerStatus.win)
		{
			return "green-solid"; // turns green if player won
		}
		else if (player.status == PlayerStatus.bust || player.status == PlayerStatus.stay)
		{
			return "grey-solid"; // turns gray if player stayed or busted
		}
		else if (player.isCurrentPlayer == true && player.status == PlayerStatus.active)
		{
			return "purple-solid"; // turns purple if it is the player's turn
		}
		return "purple-outline"; // turns outlined if it is not their turn
	}

	// Function to update each player's status
	private string PlayerStatusToString(Player player)
	{
		if (player.status == PlayerStatus.bust)
		{
			return "Busted";
		}
		else if (player.status == PlayerStatus.stay)
		{
			return "Stayed";
		}
		else if (player.status == PlayerStatus.win)
		{
			return "Winner!";
		}
		else if (player.status == PlayerStatus.stay)
		{
			return "Stayed";
		}
		return "";
	}

	/************* NAV FUNCTIONS **************************/

	// Function to navigate to Title Page/Index Page
	private void LeaveGame()
	{

		NavigationManager.NavigateTo("/");
	}

	// Private function to go to the Overall Score Page
	private void GoToOverallScore()
	{
		NavigationManager.NavigateTo("/OverallScore");
	}


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
    }
}
#pragma warning restore 1591
